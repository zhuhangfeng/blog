(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{429:function(t,s,a){"use strict";a.r(s);var n=a(1),e=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"js数据类型有哪些"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#js数据类型有哪些"}},[t._v("#")]),t._v(" js数据类型有哪些")]),t._v(" "),s("p",[t._v("基本数据类型：")]),t._v(" "),s("ul",[s("li",[t._v("undefined、null、boolean、number、string、symbol、bigint")])]),t._v(" "),s("p",[t._v("引用数据类型：")]),t._v(" "),s("ul",[s("li",[t._v("object、array、function")])]),t._v(" "),s("p",[t._v("堆：存放引用数据类型，但是在栈中存放了引用数据类型的指针\n堆：存放基本数据类型")]),t._v(" "),s("h2",{attrs:{id:"null和undefined的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#null和undefined的区别"}},[t._v("#")]),t._v(" null和undefined的区别")]),t._v(" "),s("ul",[s("li",[t._v("都是基本数据类型")]),t._v(" "),s("li",[t._v("undefined表示变量声明了但是未定义")]),t._v(" "),s("li",[t._v("null表示空对象")])]),t._v(" "),s("h2",{attrs:{id:"instanceof-运算符的实现原理及实现"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#instanceof-运算符的实现原理及实现"}},[t._v("#")]),t._v(" instanceof 运算符的实现原理及实现")]),t._v(" "),s("ul",[s("li",[t._v("instanceof 运算符适用于检测构造函数的prototype属性上是否出现在某个实例对象的原型链上")]),t._v(" "),s("li",[t._v("instanceof 运算符的原理是基于原型链的查找。")]),t._v(" "),s("li",[t._v("instanceof 运算符只能用于检查某个对象是否是某个构造函数的实例，不能用于基本数据类型的检查。")])]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("myInstanceof")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("obj1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("obj2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("typeOf obj1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'object'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" obj1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" proto "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Object"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getPrototypeOf")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("proto "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("proto "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" obj2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n      proto "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Object"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getPrototypeOf")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("proto"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br")])]),s("h2",{attrs:{id:"typeof-和-instanceof-区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#typeof-和-instanceof-区别"}},[t._v("#")]),t._v(" typeof 和 instanceof 区别")]),t._v(" "),s("ul",[s("li",[t._v("typeof 会返回一个运算数的基本类型，可以判断原始数据类型（null除外），无法判断引用数据类型（function除外）")]),t._v(" "),s("li",[t._v("instanceof 会返回布尔值，可以准确判断引用数据类型，但是不能判断原始数据类型")])]),t._v(" "),s("h2",{attrs:{id:"为什么typeof判断null为object"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#为什么typeof判断null为object"}},[t._v("#")]),t._v(" 为什么typeof判断null为object？")]),t._v(" "),s("p",[t._v("这是Javascript语言的历史遗留问题")]),t._v(" "),s("h2",{attrs:{id:"为什么0-1-0-2-0-3-如何让其相等"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#为什么0-1-0-2-0-3-如何让其相等"}},[t._v("#")]),t._v(" 为什么0.1+0.2 ！== 0.3，如何让其相等")]),t._v(" "),s("p",[t._v("因为浮点数运算的精度问题。在计算机运行过程中，需要将数据转化为二进制计算，因为浮点数自身小数位数的限制而截断的二进制在转化为十进制就会产生误差")]),t._v(" "),s("p",[t._v("解决方案：")]),t._v(" "),s("ul",[s("li",[t._v("先转换为整数再相加之后转回小数")])]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" x "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.1")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.2")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("ul",[s("li",[t._v("使用number对象的toFixed方法，只保留一位小数")])]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("n1"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("n2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toFixed")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("h2",{attrs:{id:"判断数组的方式有哪些"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#判断数组的方式有哪些"}},[t._v("#")]),t._v(" 判断数组的方式有哪些")]),t._v(" "),s("ul",[s("li",[t._v("通过Object.prototype.toString.call(arr).slice(8,-1) === 'Array'")]),t._v(" "),s("li",[t._v("通过原型链做判断obj."),s("strong",[t._v("proto")]),t._v(" === Array.prototype")]),t._v(" "),s("li",[t._v("通过ES6的Array.isArray()做判断")]),t._v(" "),s("li",[t._v("通过instanceof判断 arr instanceof Array")])]),t._v(" "),s("h2",{attrs:{id:"对类数组对象的理解-如歌转化为数组"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#对类数组对象的理解-如歌转化为数组"}},[t._v("#")]),t._v(" 对类数组对象的理解，如歌转化为数组")]),t._v(" "),s("p",[t._v("类数组也叫伪数组，类数组和数组类似，但不能调用数组的方法，具有length属性。常见的类数组有arguments，通过document.getElements获取到的内容等。")]),t._v(" "),s("ul",[s("li",[t._v("通过call调用数组的slice方法来实现转换"),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Array")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("slice")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("call")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arrLike"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])])]),t._v(" "),s("li",[t._v("通过call调用数组的splice方法"),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Array")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("splice")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("call")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arrLike"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])])]),t._v(" "),s("li",[t._v("通过apply调用数组的concat方法来实现转换"),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Array")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("concat")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("apply")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("arrayLike"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])])]),t._v(" "),s("li",[t._v("通过Array.from 方法来实现转换")])]),t._v(" "),s("h2",{attrs:{id:"数组的原生方法有哪些"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数组的原生方法有哪些"}},[t._v("#")]),t._v(" 数组的原生方法有哪些")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("改变原数组的方法：")]),t._v(" "),s("ul",[s("li",[t._v("fill(a,b,c) a填充值，b开始索引默认0，c结束索引默认数组长度")]),t._v(" "),s("li",[t._v("pop() 删除末尾元素")]),t._v(" "),s("li",[t._v("push() 在末尾加入元素")]),t._v(" "),s("li",[t._v("shift() 删除第一个元素")]),t._v(" "),s("li",[t._v("unshift() 在第一个位置加入一个或多个元素")]),t._v(" "),s("li",[t._v("splice(a,b,c) 删除数组中下标为a开始数b个元素，再插入c个元素，b默认为数组长度，c默认为空")]),t._v(" "),s("li",[t._v("reverse() 颠倒数组中的顺序")]),t._v(" "),s("li",[t._v("sort() 数组排序")])])]),t._v(" "),s("li",[s("p",[t._v("不会改变原数组的方法：")]),t._v(" "),s("ul",[s("li",[t._v("concat() 拼接数组")]),t._v(" "),s("li",[t._v("every() 如果数组所有元素都符合要求就返回true，否者false")]),t._v(" "),s("li",[t._v("filter() 返回一个符合要求的新数组")]),t._v(" "),s("li",[t._v("find() 返回第一个符合要求的元素")]),t._v(" "),s("li",[t._v("findIndex() 返回第一个符合要求的元素索引")]),t._v(" "),s("li",[t._v("forEach()")]),t._v(" "),s("li",[t._v("indexOf() 返回数组中指定元素的第一个索引")]),t._v(" "),s("li",[t._v("join() 把数组变为字符串")]),t._v(" "),s("li",[t._v("lastIndexOf() 返回指定元素的最后一个索引")]),t._v(" "),s("li",[t._v("map()")]),t._v(" "),s("li",[t._v("reduce() 对数组元素进行累计计算")]),t._v(" "),s("li",[t._v("reduceRight() 从数组尾开始累计计算")]),t._v(" "),s("li",[t._v("slice(a,b) 截取数组 a开始索引，b结束索引不包含b")]),t._v(" "),s("li",[t._v("some() 检测数组中如果有一个符合条件就返回true，否则false")])])])]),t._v(" "),s("h2",{attrs:{id:"substring-和-substr-的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#substring-和-substr-的区别"}},[t._v("#")]),t._v(" substring 和 substr 的区别")]),t._v(" "),s("ul",[s("li",[t._v("substring(startIndex,ednIndex),截取字符串，startIndex 开始索引、endIndex 结束索引，不包含结束索引")]),t._v(" "),s("li",[t._v("substr(startIndex,number),截取字符串，startIndex开始索引、number从开始索引数截取多少个")])]),t._v(" "),s("h2",{attrs:{id:"object-assign-和扩展运算法是深拷贝还是浅拷贝-两者区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#object-assign-和扩展运算法是深拷贝还是浅拷贝-两者区别"}},[t._v("#")]),t._v(" object.assign 和扩展运算法是深拷贝还是浅拷贝，两者区别")]),t._v(" "),s("ul",[s("li",[t._v("都是浅拷贝")]),t._v(" "),s("li",[t._v("Object.assign()方法接收的第一个参数作为目标对象，后面的所有参数都是源对象，把所有源对象合并到目标对象中")]),t._v(" "),s("li",[t._v("扩展运算符（...）使用时，数组或对象中的每一个值都会被拷贝到一个新的数组或对象")])]),t._v(" "),s("h2",{attrs:{id:"new操作符的实现原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#new操作符的实现原理"}},[t._v("#")]),t._v(" new操作符的实现原理")]),t._v(" "),s("ul",[s("li",[t._v("创建一个空对象")]),t._v(" "),s("li",[t._v("设置原型，将构造函数的原型指向空对象的prototype属性")]),t._v(" "),s("li",[t._v("将this指向这个对象，通过apply执行构造函数")]),t._v(" "),s("li",[t._v("判断函数的返回值类型，如果是值类型，返回创建的对象。如果是引用类型，就返回这个引用类型的对象")])]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("myNew")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("obj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("args")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" newObj  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Object"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("create")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" result  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("obj")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("apply")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("newObj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("result "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" result "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'object'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" result "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'function'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" result\n   "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" newObj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br")])]),s("h2",{attrs:{id:"for-in-和-for-of-的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#for-in-和-for-of-的区别"}},[t._v("#")]),t._v(" for...in 和 for...of 的区别")]),t._v(" "),s("ul",[s("li",[t._v("for in 用于遍历对象、数组")]),t._v(" "),s("li",[t._v("for of 可以遍历字符串、数组，不能遍历普通对象")])]),t._v(" "),s("h2",{attrs:{id:"对ajax的理解-实现一个ajax请求"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#对ajax的理解-实现一个ajax请求"}},[t._v("#")]),t._v(" 对ajax的理解，实现一个ajax请求")]),t._v(" "),s("p",[t._v("通过JavaScript的异步通信，从服务器端获取xml文档从中提取数据，再更新当前网页的对应部分，而不用刷新整个网页")]),t._v(" "),s("ul",[s("li",[t._v("创建一个XMLHttpRequest对象")]),t._v(" "),s("li",[t._v("在这个对象上使用open方法创建一个http请求，open方法所需要的参数是请求的方法、请求的地址、是否异步和用户的认证信息")]),t._v(" "),s("li",[t._v("在发起请求前，可以使用setRequsetHeader添加请求头，还有XMLHttpRequest对象有5个状态，当它状态变化时触发onreadyStatechage事件，可以通过设置监听函数，来处理请求成功后的结果。当readyState变为4时，代表服务器返回的数据接收完成，状态为2xx或304代表返回正常")]),t._v(" "),s("li",[t._v("调用send方法发起请求")])]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("   "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("SERVER_URL")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/server"')]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" xhr "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("XMLHttpRequest")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//创建http请求")]),t._v("\n   xhr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("open")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"GET"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("url"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//设置状态监听函数")]),t._v("\n   xhr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("onreadystatechange")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("readyState "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//当请求成功时")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("status "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n         "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("handle")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("response"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n         console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("error")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("statusText"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//设置请求失败时的监听函数")]),t._v("\n   xhr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("onerror")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("error")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("statusText"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//设置请求投信息")]),t._v("\n   xhr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("responseType "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"json"')]),t._v("\n   xhr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setRequestHeader")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Accept"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"spplication/json"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//发送http请求")]),t._v("\n   xhr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("send")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br"),s("span",{staticClass:"line-number"},[t._v("17")]),s("br"),s("span",{staticClass:"line-number"},[t._v("18")]),s("br"),s("span",{staticClass:"line-number"},[t._v("19")]),s("br"),s("span",{staticClass:"line-number"},[t._v("20")]),s("br"),s("span",{staticClass:"line-number"},[t._v("21")]),s("br"),s("span",{staticClass:"line-number"},[t._v("22")]),s("br"),s("span",{staticClass:"line-number"},[t._v("23")]),s("br")])]),s("h2",{attrs:{id:"ajax、axios、fetch的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ajax、axios、fetch的区别"}},[t._v("#")]),t._v(" ajax、axios、fetch的区别")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("ajax")]),t._v(" "),s("ul",[s("li",[t._v("基于原生XHR开发，XHR本身架构不清晰")]),t._v(" "),s("li",[t._v("针对MVC编成，不符合现在前端MVVM的浪潮")]),t._v(" "),s("li",[t._v("多个请求之间如果有先后关系的话，就会出现回调地狱")]),t._v(" "),s("li",[t._v("配置和调用方式非常混乱，而且基于事件的异步模型不友好")])])]),t._v(" "),s("li",[s("p",[t._v("axios")]),t._v(" "),s("ul",[s("li",[t._v("支持PromiseAPI")]),t._v(" "),s("li",[t._v("从浏览器中创建XMLHttpRequest")]),t._v(" "),s("li",[t._v("从 node.js 创建http请求")]),t._v(" "),s("li",[t._v("支持请求拦截和响应拦截")]),t._v(" "),s("li",[t._v("自动转换JSON数据")]),t._v(" "),s("li",[t._v("客服端支持防止CSRE/XSRF")])])]),t._v(" "),s("li",[s("p",[t._v("fetch")]),t._v(" "),s("ul",[s("li",[t._v("浏览器原生实现的请求方式，ajax的替代品")]),t._v(" "),s("li",[t._v("基于标准promise实现，支持 async/await")]),t._v(" "),s("li",[t._v("fetchtch只对网络请求报错，对400，500都当做成功的请求，需要封装去处理")]),t._v(" "),s("li",[t._v("默认不会带cookie，需要添加配置项")]),t._v(" "),s("li",[t._v("fetch没有办法原生监测请求的进度，而XHR可以")])])])]),t._v(" "),s("h2",{attrs:{id:"foreach-和-map-方法有什么区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#foreach-和-map-方法有什么区别"}},[t._v("#")]),t._v(" forEach 和 map 方法有什么区别")]),t._v(" "),s("p",[t._v("两个方法都是用来遍历循环数组，区别如下：")]),t._v(" "),s("ul",[s("li",[t._v("forEach() 对数据的操作会改变原数组，该方法没有返回值")]),t._v(" "),s("li",[t._v("map() 方法不会改变原数组的值，返回一个新数组，新数组中的值为原数组调用函数处理之后的值")])]),t._v(" "),s("h2",{attrs:{id:"什么是尾调用-使用尾调用有什么好处"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#什么是尾调用-使用尾调用有什么好处"}},[t._v("#")]),t._v(" 什么是尾调用，使用尾调用有什么好处？")]),t._v(" "),s("p",[t._v('尾调用就是在函数的最后一步调用函数，在一个函数里调用另一个函数会保留当前执行的上下文。如果在函数尾部调用，因为已经是最后一步了，所以这个时候不用保留当前的执行上下文，从而节省内存，但在ES6中只能在严格模式下开启，正常模式无效。"use strict"可以开启严格模式。')]),t._v(" "),s("h2",{attrs:{id:"浅拷贝和深拷贝"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#浅拷贝和深拷贝"}},[t._v("#")]),t._v(" 浅拷贝和深拷贝")]),t._v(" "),s("ul",[s("li",[t._v("浅拷贝指创建新的数据，这个数据有着原始数据属性值的一份精确拷贝，如果属性是基本类型，拷贝的就是基本类型的值。如果属性是引用类型，拷贝的就是内存地址。即浅拷贝是拷贝一层，深层次的引用类型则共享内存地址")])]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("   "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("clone")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("obj")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" newObj  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" item "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" obj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n         "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("hasOwnProperty")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("item"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            newObj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("item"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" obj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("item"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n         "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" newObj\n   "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br")])]),s("p",[t._v("在Javascript中，浅拷贝还可以由以下几种方法实现：\n- Object.assign\n- Array.prototype.slice()\n- Array.prototype.concat()\n- 使用拓展运算符")]),t._v(" "),s("ul",[s("li",[t._v("深拷贝开辟一个新的栈，两个对象属性完全相同，但是对应两个不同的地址，修改一个对象的属性，不会改变另一个对象的属性")])]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("   "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("deepClone")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("hash "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("WeakMap")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" obj\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("instanceof")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Date")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Date")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("instanceof")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RegExp")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RegExp")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//普通值或者函数不需要拷贝")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" obj "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"object"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v("  obj\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("hash"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" hash"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" cloneObj "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("obj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("constructor")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      hash"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("set")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("cloneObj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" key "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" obj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n         "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("hasOwnProperty")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("key"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            cloneObj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("key"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("deepClone")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("key"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("hash"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n         "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" cloneObj\n   "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br")])]),s("p",[t._v("常见的深拷贝的方式有：")]),t._v(" "),s("ul",[s("li",[t._v("函数库里的cloneDeep()")]),t._v(" "),s("li",[t._v("JSON.stringify(),再通过JSON.parse")])]),t._v(" "),s("h2",{attrs:{id:"let、const、var的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#let、const、var的区别"}},[t._v("#")]),t._v(" let、const、var的区别")]),t._v(" "),s("p",[t._v("var")]),t._v(" "),s("ul",[s("li",[t._v("使用var声明的变量存在变量提升，即在声明之前就可以访问到变量，但其值为undefined")]),t._v(" "),s("li",[t._v("var声明的变量作用是函数作用域，不是块级作用域")]),t._v(" "),s("li",[t._v("可以重复声明同一个变量")])]),t._v(" "),s("p",[t._v("let")]),t._v(" "),s("ul",[s("li",[t._v("let声明的变量存在块级作用域，只能在声明的内部块中使用")]),t._v(" "),s("li",[t._v("不允许重复声明同一个变量")]),t._v(" "),s("li",[t._v("不存在变量提升，必须在声明后才能访问")])]),t._v(" "),s("p",[t._v("const")]),t._v(" "),s("ul",[s("li",[t._v("const声明的常量其值在声明后不能被修改")]),t._v(" "),s("li",[t._v("const声明的变量也存在块级作用域")]),t._v(" "),s("li",[t._v("必须在声明时赋初始值，且不能再重新赋值")]),t._v(" "),s("li",[t._v("声明的变量存储的时引用地址，因此可以修改对象或数组的属性，但是不能重新赋值整个对象或数组")])]),t._v(" "),s("h2",{attrs:{id:"箭头函数与普通函数的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#箭头函数与普通函数的区别"}},[t._v("#")]),t._v(" 箭头函数与普通函数的区别")]),t._v(" "),s("ul",[s("li",[t._v("箭头函数是匿名函数，不能作为构造函数")]),t._v(" "),s("li",[t._v("箭头函数没有arguments")]),t._v(" "),s("li",[t._v("箭头函数没有自己的this")]),t._v(" "),s("li",[t._v("call、applay、bind方法不能改变箭头函数中的this指向")]),t._v(" "),s("li",[t._v("箭头函数没有原型prototype")])]),t._v(" "),s("h2",{attrs:{id:"call、apply、bind的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#call、apply、bind的区别"}},[t._v("#")]),t._v(" call、apply、bind的区别")]),t._v(" "),s("ul",[s("li",[t._v("call：立即执行函数，逐个传参")])]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("myCall")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("context"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("args")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   context "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" context "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" window\n   "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" fn "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Symbol")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n   context"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("fn"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" result "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" context"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("fn"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("delete")]),t._v(" context"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("fn"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" result\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br")])]),s("ul",[s("li",[t._v("apply：立即执行函数，以数组的形式传参")])]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("myApply")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("context"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("args")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   context "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" context "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" window\n   "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" fn "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Symbol")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n   context"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("fn"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" result "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" context"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("fn"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("delete")]),t._v(" context"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("fn"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" result\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br")])]),s("ul",[s("li",[t._v("bind：返回一个函数")])]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("myBind")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("context"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("args")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" fn "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("innerArgs")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("fn")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("apply")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("context"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("concat")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("innerArgs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br")])]),s("h2",{attrs:{id:"set、map的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#set、map的区别"}},[t._v("#")]),t._v(" Set、Map的区别")]),t._v(" "),s("p",[t._v("set")]),t._v(" "),s("ul",[s("li",[t._v("创建：new Set([1,2,3,4,5])")]),t._v(" "),s("li",[t._v("add(value)：添加值")]),t._v(" "),s("li",[t._v("delete(value): 删除值")]),t._v(" "),s("li",[t._v("has(value): 查看是否有该成员")]),t._v(" "),s("li",[t._v("clear(): 清除所有成员，没有返回值")])]),t._v(" "),s("p",[t._v("map")]),t._v(" "),s("ul",[s("li",[t._v("set(key,value): 添加新元素")]),t._v(" "),s("li",[t._v("get(key)：通过键来查找值")]),t._v(" "),s("li",[t._v("has(key): 判断是否有key对应的值")]),t._v(" "),s("li",[t._v("delete(key): 删除")]),t._v(" "),s("li",[t._v("clear(): 删除所有元素")])]),t._v(" "),s("p",[t._v("区别")]),t._v(" "),s("ul",[s("li",[t._v("Map是一种键值对的集合，和对象不同的是，键可以是任意值")]),t._v(" "),s("li",[t._v("Set是类似数组的一种数据结构，类似数组的一种集合，但是里面没有重复值")])]),t._v(" "),s("h2",{attrs:{id:"promise-的理解"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#promise-的理解"}},[t._v("#")]),t._v(" Promise 的理解")]),t._v(" "),s("p",[t._v("promise是JavaScript中处理异步操作的一种机制，通过其特点和链式调用可以更好的管理和处理异步代码。提高可读性、可维护性、避免回调地狱问题")]),t._v(" "),s("ul",[s("li",[t._v("三种状态：pending（进行中）、fulfilled（已成功）、rejected（已失败）。状态一旦改变就不可逆转")]),t._v(" "),s("li",[t._v("链式调用，可以通过.then方法处理异步操作的成功和失败情况")]),t._v(" "),s("li",[t._v("使用.catch()方法捕获链中的任何错误")]),t._v(" "),s("li",[t._v("可以使用Promise.all()方法实现多个promise并行执行，所有结果已数组形式返回\n-可以避免回调地狱")])]),t._v(" "),s("h2",{attrs:{id:"对async-await的理解"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#对async-await的理解"}},[t._v("#")]),t._v(" 对async/await的理解")]),t._v(" "),s("p",[t._v("async/await是Generator的语法糖。它能实现的效果都能用then链来实现，它是为优化then链而开发出来的。通过async关键字声明一个异步函数，await用于等待一个异步方法执行完成，并且阻塞执行。")]),t._v(" "),s("h2",{attrs:{id:"async-await对比promise的优势"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#async-await对比promise的优势"}},[t._v("#")]),t._v(" async/await对比Promise的优势")]),t._v(" "),s("ul",[s("li",[t._v("代码可读性高，Promise虽然摆脱了回调地狱，但自身的链式调用会影响可读性")]),t._v(" "),s("li",[t._v("相对于Promise更优雅，传值更方便")]),t._v(" "),s("li",[t._v("对错误处理友好，可以通过try/catch捕获")])]),t._v(" "),s("h2",{attrs:{id:"谈谈你对es6的理解"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#谈谈你对es6的理解"}},[t._v("#")]),t._v(" 谈谈你对ES6的理解")]),t._v(" "),s("ul",[s("li",[t._v("let和const声明变量")]),t._v(" "),s("li",[t._v("扩展运算符 ...")]),t._v(" "),s("li",[t._v("结构赋值 let[a,b] = [1,2]")]),t._v(" "),s("li",[t._v("模板字符串 "),s("code",[t._v("hello,${name}")])]),t._v(" "),s("li",[t._v("箭头函数")]),t._v(" "),s("li",[t._v("新增class类")]),t._v(" "),s("li",[t._v("Promise")]),t._v(" "),s("li",[t._v("Generator")]),t._v(" "),s("li",[t._v("Map/Set")]),t._v(" "),s("li",[t._v("模块化，import和export导入、导出")]),t._v(" "),s("li",[t._v("proxy监听拦截函数，比Object.defineProperty更强")])]),t._v(" "),s("h2",{attrs:{id:"es6模块和commonjs模块有什么区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#es6模块和commonjs模块有什么区别"}},[t._v("#")]),t._v(" ES6模块和CommonJS模块有什么区别")]),t._v(" "),s("ul",[s("li",[t._v("语法不同，ES6使用import和export关键字来导入和导出模块，而CommonJS模块使用require和exports来导入哈导出模块")]),t._v(" "),s("li",[t._v("ES6支持异步加载。CommonJS模块不支持异步")])]),t._v(" "),s("h2",{attrs:{id:"原型-和原型链"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#原型-和原型链"}},[t._v("#")]),t._v(" 原型 和原型链")]),t._v(" "),s("ul",[s("li",[t._v("原型是每个对象都具有的属性，其中有显示原型prototype，隐式原型__proto__")]),t._v(" "),s("li",[t._v("原型链：当在一个对象上查找某个属性时，对象本身不存在该属性方法时，就会沿着原型链__proto__向上查找，直到找到null为止")])]),t._v(" "),s("h2",{attrs:{id:"闭包"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#闭包"}},[t._v("#")]),t._v(" 闭包")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("官方说法：一个函数和对其周围状态的引用捆绑在一起，这样的组合就是闭包")])]),t._v(" "),s("li",[s("p",[t._v("一个内层函数访问外层函数的作用域")])]),t._v(" "),s("li",[s("p",[t._v("优点：创建全局私有变量，避免变量全局污染")])]),t._v(" "),s("li",[s("p",[t._v("缺点：创建的变量不能被回收，容易消耗内存，使用不当会导致内存溢出，解决：在不使用的时候把变量设为null")])]),t._v(" "),s("li",[s("p",[t._v("使用场景：")]),t._v(" "),s("ul",[s("li",[t._v("用于创建全局私有变量")]),t._v(" "),s("li",[t._v("封装类和模块")]),t._v(" "),s("li",[t._v("实现函数柯里化")])])])]),t._v(" "),s("h2",{attrs:{id:"闭包一定会造成内存泄漏吗"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#闭包一定会造成内存泄漏吗"}},[t._v("#")]),t._v(" 闭包一定会造成内存泄漏吗?")]),t._v(" "),s("p",[t._v("闭包并不一定会造成内存泄漏，如果在使用闭包后变量没有及时销毁，可能造成内存泄漏的风险，只要合理的使用闭包就不会造成内存泄漏。")]),t._v(" "),s("h2",{attrs:{id:"对作用域、作用域链的理解"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#对作用域、作用域链的理解"}},[t._v("#")]),t._v(" 对作用域、作用域链的理解")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("全局作用域：可以全局访问")])]),t._v(" "),s("li",[s("p",[t._v("函数作用域：只能在函数中访问")])]),t._v(" "),s("li",[s("p",[t._v("块级作用域：ES6中新增的let、const都是块级作用域，只能在代码块中使用")])]),t._v(" "),s("li",[s("p",[t._v("作用域链：变量在指定作用域中没有找到，会依次向上一层作用域中查找，直到全局作用域，这个查找过程被称为作用域链。")])])]),t._v(" "),s("h2",{attrs:{id:"v8垃圾回收"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#v8垃圾回收"}},[t._v("#")]),t._v(" V8垃圾回收")]),t._v(" "),s("ul",[s("li",[t._v("自动管理内存，防止内存泄漏，提高程序的性能和开发效率")]),t._v(" "),s("li",[t._v("使用了分代式回收策略，分为新生代和老生代")]),t._v(" "),s("li",[t._v("新生代\n使用scavenge（半空间）算法，把新生代内存划分为激活状态的From空间和未激活的to空间。程序中声明的对象会被分配到From空间，当进行垃圾回收时，如果From空间中有存货的对象，则会复制到To空间进行保存、非存活对象会自动回收，复制完成后，From空间和to空间进行交换，原来的From空间变为To空间，To空间变为From空间，当To空间内存超过25%时就会进入老生代，对象经历过一次Scavenge算法就会移到老生代")]),t._v(" "),s("li",[t._v("老生代\n使用Mark-Sweep（标记清除）和Mark-Compact（标记整理）算法进行管理\n"),s("ul",[s("li",[t._v("标记清除分为标记和清除两个阶段，标记阶段垃圾回收器会在内部构建一个根节点。从根节点出发遍历其可以访问到的子节点并标记为活动的，根节点不能访问到的地方即为非活动的，清除阶段垃圾回收器将释放所有非活动的内存块，以下几种可以作为跟几点\n"),s("ul",[s("li",[t._v("全局对象")]),t._v(" "),s("li",[t._v("本地函数的局部变量和参数")]),t._v(" "),s("li",[t._v("当嵌套调用链上的其他函数的变量和参数")])])]),t._v(" "),s("li",[t._v("使用mark-compact标记整理算法是因为使用mark-sweep标记清除算法会导致对象内存地址不连续，出现内存碎片问题。Mark-Compact算法是为了解决内存碎片问题，在标记算法标记完成后使用标记整理算法把标记过的对象移到栈内存的一端，再清理掉边界外的全部内存。")])])])]),t._v(" "),s("h2",{attrs:{id:"避免内存泄漏的方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#避免内存泄漏的方法"}},[t._v("#")]),t._v(" 避免内存泄漏的方法")]),t._v(" "),s("ul",[s("li",[t._v("尽量少使用全局变量，使用完全局变量后设置为null触发垃圾回收机制")]),t._v(" "),s("li",[t._v("及时清除定时器")]),t._v(" "),s("li",[t._v("合理使用闭包，使用完后释放对这些变量的引用")]),t._v(" "),s("li",[t._v("释放不在使用的对象，手动设置为null触发垃圾回收机制")]),t._v(" "),s("li",[t._v("避免循环引用，循环引用就是两个或多个对象之间互相引用，导致他们无法被垃圾回收")]),t._v(" "),s("li",[t._v("注意DOM对象的引用：及时清除对DOM对象的引用")])])])}),[],!1,null,null,null);s.default=e.exports}}]);